#!/usr/bin/env ruby

# Only for deploy this script.
$LOAD_PATH << './lib'

require 'rubygems'
require 'commander'
require 'commander/import'
require 'mysqlsync/schema'
require 'mysqlsync/sync'
require 'mysqlsync/version'

program :name, 'MySQL Sync Tool'
program :version, Mysqlsync::VERSION
program :description, 'This tools allow sync one way two tables.'
program :help, 'Author', 'Nicola Strappazzon <nicola51980@gmail.com>'

command :all do |c|
  c.description = 'Sync table schema and data'
  c.syntax = 'mysqlsync all --from h=127.0.0.1,P=3306,u=root,p=admin,d=demo_from --to h=127.0.0.1,P=3306,u=root,p=admin,d=demo_to --table foo'
  c.option '--from STRING', String, 'DNS to connect to source database'
  c.option '--to STRING', String, 'DNS to connect to destination database'
  c.option '--table STRING', String, 'Table name to use to sync'

  c.action do |args, options|
    if options.from.nil? ||
       options.to.nil? ||
       options.table.nil?
       puts c.syntax
    else
      sync = Mysqlsync::Sync.new(options.from, options.to, options.table)
      sync.do_modify_table

      if sync.valid_schema
        sync.get_dump_head
        sync.do_delete
        sync.do_update
        sync.do_insert
        sync.get_dump_bottom
      else
        puts "-- Schema table is not equal."
      end
    end
  end
end

command :checksum do |c|
  c.description = 'Checksum between tables'
  c.syntax = 'mysqlsync checksum --from h=127.0.0.1,P=3306,u=root,p=admin,d=demo_from --to h=127.0.0.1,P=3306,u=root,p=admin,d=demo_to --table foo'
  c.option '--from STRING', String, 'DNS to connect to source database'
  c.option '--to STRING', String, 'DNS to connect to destination database'
  c.option '--table STRING', String, 'Table name to use to sync'

  c.action do |args, options|
    if options.from.nil? ||
       options.to.nil? ||
       options.table.nil?
       puts c.syntax
    else
      sync = Mysqlsync::Sync.new(options.from, options.to, options.table)
      sync.checksum
    end
  end
end

command :merge do |c|
  c.description = 'Merge two tables with increment primary key and foreign key'
  c.syntax = 'mysqlsync checksum --from h=127.0.0.1,P=3306,u=root,p=admin,d=demo_from --to h=127.0.0.1,P=3306,u=root,p=admin,d=demo_to --table foo --increment-columns id,type_id --increment-value=1000'
  c.option '--from STRING', String, 'DNS to connect to source database'
  c.option '--to STRING', String, 'DNS to connect to destination database'
  c.option '--table STRING', String, 'Table name to use to sync'
  c.option '--increment-columns STRING', String, 'Primary Key and Foreign Key'
  c.option '--increment-value STRING', String, 'New value for Primary Key and Foreign Key'

  c.action do |args, options|
    if options.from.nil? ||
       options.to.nil? ||
       options.table.nil? ||
       options.increment_columns.nil? ||
       options.increment_value.nil?
       puts c.syntax
    else
      sync = Mysqlsync::Sync.new(options.from,
                                 options.to,
                                 options.table,
                                 { columns: options.increment_columns,
                                     value: options.increment_value })
      sync.do_insert
    end
  end
end
